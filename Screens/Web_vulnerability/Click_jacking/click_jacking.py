from PyQt5.QtWidgets import QMainWindow, QVBoxLayout, QHBoxLayout, QLabel, QLineEdit, QPushButton,QTextEdit,QComboBox
from PyQt5.QtCore import Qt, QObject
from Widgets.SearchButton import *
from Widgets.ClearButton import *
from Widgets.ResponseBox import *
from Widgets.TargetInput import *
from Widgets.SendButton import *
from Widgets.InputBox import *
from Service.Web_vulnerability import click_jacking

def setup_click_jacking_tab(self: QObject, click_jacking_tab):
    def clearInputs():
        self.res_box.clear_text()
        self.target_input.clear()

    button_layout = QHBoxLayout()
    search_button = SendButton()
    clear_button = ClearButton()
    button_layout.addWidget(search_button)
    button_layout.addWidget(clear_button)
    self.res_box = ResponseBox()
    clear_button.clicked.connect(clearInputs)

    api = click_jacking.ClickJackingService(self, button=search_button, output=self.res_box)
    layout = QVBoxLayout()
    # dial = Dialog("get", "/enums/dns/click_jacking")
    # Add input box and dropdown list
    input_layout = QVBoxLayout()
    target_label = QLabel("URL:")
    self.target_input = TargetInput()
    self.target_input.setPlaceholderText("domain name")
    input_layout.addWidget(target_label)
    input_layout.addWidget(self.target_input)
    create_script_label = QLabel("Create script:")
    create_script=QComboBox()
    options=["true","false"]
    create_script.addItems(options)
    input_layout.addWidget(create_script_label)
    input_layout.addWidget(create_script)
    search_button.clicked.connect(lambda _: api.clickJacking(self.target_input.toPlainText(),create_script.currentText()))
    response_label = QLabel("Response:")
    layout.addLayout(input_layout)
    layout.addWidget(response_label)
    layout.addWidget(self.res_box)
    layout.addLayout(button_layout)
    click_jacking_tab.setLayout(layout)
    # options_dropdown.setFixedWidth(int((input_layout.sizeHint().width())*0.8))
