from PyQt5.QtWidgets import QMainWindow, QVBoxLayout, QHBoxLayout, QLabel, QLineEdit, QPushButton,QTextEdit,QComboBox
from PyQt5.QtCore import Qt, QObject
from Widgets.SearchButton import *
from Widgets.ClearButton import *
from Widgets.ResponseBox import *
from Widgets.TargetInput import *
from Widgets.SendButton import *
from Widgets.InputBox import *
from Widgets.CheckBox import *
# from Service.Web_vulnerability import lfi

def setup_lfi_tab(self: QObject, lfi_tab):
    def clearInputs():
        res_box.clear_text()
        target_input.clear()
        cookie_input.clear()
        windows_box.setChecked(False)
        verbose_box.setChecked(False)

    button_layout = QHBoxLayout()
    search_button = SendButton()
    clear_button = ClearButton()
    button_layout.addWidget(search_button)
    button_layout.addWidget(clear_button)
    res_box = ResponseBox()
    clear_button.clicked.connect(clearInputs)

    # api = lfi.ClickJackingService(self, button=search_button, output=self.res_box)
    layout = QVBoxLayout()
    # dial = Dialog("get", "/enums/dns/lfi")
    # Add input box and dropdown list
    input_layout = QVBoxLayout()
    target_label = QLabel("URL:")
    target_input = TargetInput()
    target_input.setPlaceholderText("domain name")
    input_layout.addWidget(target_label)
    input_layout.addWidget(target_input)
    windows_box = CheckBox("Windows")
    input_layout.addWidget(windows_box)
    verbose_box = CheckBox("Verbose")
    input_layout.addWidget(verbose_box)
    cookie_label = QLabel("Cookie:")
    cookie_input=InputBox()
    cookie_input.setPlaceholderText("cookie")
    input_layout.addWidget(cookie_label)
    input_layout.addWidget(cookie_input)
    # search_button.clicked.connect(lambda _: api.clickJacking(target_input.text(),"true"))
    response_label = QLabel("Response:")
    layout.addLayout(input_layout)
    layout.addWidget(response_label)
    layout.addWidget(res_box)
    layout.addLayout(button_layout)
    lfi_tab.setLayout(layout)
    # options_dropdown.setFixedWidth(int((input_layout.sizeHint().width())*0.8))
