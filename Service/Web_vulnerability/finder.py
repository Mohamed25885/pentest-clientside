from PyQt5.QtCore import QThread, pyqtSignal
from Service import BaseService
from PyQt5.QtWidgets import QPushButton, QTextEdit
from requests import Response
from pyqtspinner import WaitingSpinner
from PyQt5.QtCore import QRunnable, QThread, QMetaObject, Q_ARG, Qt, QProcess
from PyQt5.QtCore import pyqtSlot, QThreadPool, QObject
import requests
import json

class FinderService(BaseService):
    def __init__(self, main, button: QPushButton, output: QTextEdit):
        super().__init__(main)
        self.button = button
        self.output = output

    def before_request(self):
        self.button.setDisabled(True)

    def onResponse(self, **kwargs):
        print("here")
        res: Response = kwargs['response']
        self.button.setDisabled(False)
        data = res.json()['data']
        print(res.status_code)
        if isinstance(data, dict) and 'messages' in data:
                print(len(data))
                formatted_data = json.dumps(data, indent=2)
                print(str(formatted_data))
                messages = data['messages']
                print(len(messages))
                formatted_data = "\n".join([f"-\"{key}\":  {value}" for key, value in messages.items()])
                print(formatted_data)
                self.output.setText(formatted_data)
        else:
                self.output.setText(str(data))

    def finder(self, request):

        url = "/jwt/finder"
        json_data = {'request': request}
        print(json_data)
        response = self.request("post", url, json=json_data)
        print(response)
        self.before_request()
        self.spinner.start()



