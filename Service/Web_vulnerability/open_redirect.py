from Service import BaseService
from PyQt5.QtWidgets import QPushButton, QLineEdit,QTextEdit
from PyQt5.QtCore import QObject
from requests import Response
from urllib.parse import urlparse
import json

class OpenRedirectService(BaseService):
    def __init__(self, main: QObject, button: QPushButton, output: QTextEdit) -> None:
        super().__init__(main)
        self.button = button
        self.output = output

    def before_request(self):
        self.button.setDisabled(True)

    def onError(self):
        self.button.setDisabled(False)

    def onResponse(self, **kwargs):
        res: Response = kwargs['response']
        self.button.setDisabled(False)
        data = res.json()['data']
        formatted_data = ""

        if isinstance(data, dict):
            formatted_data = ""
            if isinstance(data, dict):
                for key, value in data.items():
                    if isinstance(value, list):
                        formatted_data += f'"{key}":\n'
                        for item in value:
                            formatted_data += f"  - {json.dumps(item, indent=2)}\n"
                        formatted_data += "\n"
                    elif isinstance(value, dict):
                        formatted_data += f'"{key}":\n{json.dumps(value, indent=4)}\n\n'
                    else:
                        formatted_data += f'"{key}": {value}\n\n'
        else:
            formatted_data = str(data)

        self.output.setText(formatted_data)




    def open_redirect(self, url: str):

        if self.validator.domain(url).validate():
            print("ok")
            self.request("get", "/web-vulnerabilities/open-redirect",
                         params={"url": url})
